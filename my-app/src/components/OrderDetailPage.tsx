"use client";

import Image from "next/image";
import { useRouter } from "next/navigation";

interface OrderDetailProps {
  orderId?: string;
}

interface OrderStatus {
  icon: string;
  title: string;
  description: string;
  time: string;
  completed: boolean;
}

interface OrderItem {
  id: number;
  name: string;
  price: number;
  quantity: number;
  image: string;
}

export default function OrderDetailPage({ orderId = "DH001" }: OrderDetailProps) {
  const router = useRouter();

  const orderStatuses: OrderStatus[] = [
    {
      icon: "üìù",
      title: "ƒê∆°n h√†ng ƒë∆∞·ª£c t·∫°o",
      description: "ƒê∆°n h√†ng c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng",
      time: "15/12/2025 - 14:30",
      completed: true,
    },
    {
      icon: "‚úÖ",
      title: "ƒê√£ x√°c nh·∫≠n ƒë∆°n h√†ng",
      description: "Ch√∫ng t√¥i ƒë√£ x√°c nh·∫≠n v√† b·∫Øt ƒë·∫ßu x·ª≠ l√Ω ƒë∆°n h√†ng",
      time: "15/12/2025 - 15:45",
      completed: true,
    },
    {
      icon: "üì¶",
      title: "ƒêang chu·∫©n b·ªã h√†ng",
      description: "ƒê∆°n h√†ng ƒëang ƒë∆∞·ª£c ƒë√≥ng g√≥i c·∫©n th·∫≠n",
      time: "16/12/2025 - 09:00",
      completed: true,
    },
    {
      icon: "üöö",
      title: "ƒêang giao h√†ng",
      description: "ƒê∆°n h√†ng ƒëang tr√™n ƒë∆∞·ªùng giao ƒë·∫øn b·∫°n",
      time: "D·ª± ki·∫øn: 18/12/2025",
      completed: false,
    },
    {
      icon: "‚úì",
      title: "ƒê√£ giao th√†nh c√¥ng",
      description: "ƒê∆°n h√†ng ƒë√£ ƒë∆∞·ª£c giao th√†nh c√¥ng",
      time: "D·ª± ki·∫øn: 18/12/2025",
      completed: false,
    },
  ];

  const orderItems: OrderItem[] = [
    {
      id: 1,
      name: "S·∫£n ph·∫©m A - Healink Essential",
      price: 60000,
      quantity: 2,
      image: "/icons/logo.png",
    },
    {
      id: 2,
      name: "S·∫£n ph·∫©m B - Healink Premium",
      price: 145000,
      quantity: 1,
      image: "/icons/logo.png",
    },
  ];

  const subtotal = orderItems.reduce((sum, item) => sum + item.price * item.quantity, 0);
  const shippingFee = 0;
  const total = subtotal + shippingFee;

  return (
    <div className="min-h-screen bg-white py-8 px-6">
      <div className="max-w-[1272px] mx-auto">
        {/* Order Tabs */}
        <div className="flex gap-6 mb-8 border-b border-gray-200">
          <button className="pb-2 px-1 font-black text-base border-b-2 border-black">
            Chi ti·∫øt ƒë∆°n h√†ng #{orderId}
          </button>
          <button className="pb-2 px-1 font-medium text-base text-gray-600 hover:text-black">
            Chi ti·∫øt ƒë∆°n h√†ng #DH002
          </button>
          <button className="pb-2 px-1 font-medium text-base text-gray-600 hover:text-black">
            Chi ti·∫øt ƒë∆°n h√†ng #DH003
          </button>
        </div>

        {/* Header */}
        <div className="flex justify-between items-start mb-8">
          <div>
            <h1 className="text-[40px] font-black leading-[60px] text-black mb-4">
              ƒê∆°n h√†ng #{orderId}
            </h1>
            <div className="flex items-center gap-3">
              <div className="w-5 h-5 bg-[#2196F3] rounded-full"></div>
              <span className="text-xl font-medium">ƒê√£ x√°c nh·∫≠n</span>
            </div>
          </div>
          <button className="px-6 py-3 bg-[#604B3B] text-white font-medium rounded-lg hover:bg-[#4a3b2d] transition-colors">
            Li√™n h·ªá h·ªó tr·ª£
          </button>
        </div>

        {/* Order Status Timeline */}
        <div className="border-2 border-[#604B3B] rounded-lg p-8 mb-8">
          <h2 className="text-2xl font-bold text-black mb-8">Tr·∫°ng th√°i ƒë∆°n h√†ng</h2>
          
          <div className="space-y-0">
            {orderStatuses.map((status, index) => (
              <div key={index} className="relative">
                {/* Status Item */}
                <div className="flex items-start gap-6">
                  {/* Icon Circle */}
                  <div
                    className={`flex-shrink-0 w-[50px] h-[50px] rounded-full flex items-center justify-center text-xl ${
                      status.completed
                        ? "bg-[#604B3B] border-2 border-[#604B3B]"
                        : "bg-white border-2 border-[#E0E0E0]"
                    }`}
                  >
                    <span className={status.completed ? "text-white" : "text-gray-400"}>
                      {status.completed ? status.icon : index + 1}
                    </span>
                  </div>

                  {/* Content */}
                  <div className="flex-1 pb-10">
                    <div className="flex justify-between items-start">
                      <div>
                        <h3 className="text-lg font-bold text-black mb-2">{status.title}</h3>
                        <p className="text-base text-[#666666]">{status.description}</p>
                      </div>
                      <span className="text-sm text-[#666666] whitespace-nowrap ml-4">
                        {status.time}
                      </span>
                    </div>
                  </div>
                </div>

                {/* Connecting Line */}
                {index < orderStatuses.length - 1 && (
                  <div
                    className={`absolute left-6 top-[50px] w-0.5 h-10 ${
                      status.completed ? "bg-[#604B3B]" : "bg-[#E0E0E0]"
                    }`}
                  ></div>
                )}
              </div>
            ))}
          </div>
        </div>

        {/* Shipping & Payment Info */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
          {/* Shipping Info */}
          <div className="border-2 border-[#604B3B] rounded-lg p-8">
            <h2 className="text-2xl font-bold text-black mb-8">Th√¥ng tin giao h√†ng</h2>
            
            <div className="space-y-6">
              <div>
                <p className="text-base font-medium text-black mb-1">H·ªç v√† t√™n:</p>
                <p className="text-lg text-black">Tr·∫ßn Ng·ªçc M</p>
              </div>
              
              <div>
                <p className="text-base font-medium text-black mb-1">Email:</p>
                <p className="text-lg text-black">aaaaaaaa@gmail.com</p>
              </div>
              
              <div>
                <p className="text-base font-medium text-black mb-1">S·ªë ƒëi·ªán tho·∫°i:</p>
                <p className="text-lg text-black">0866 866 866</p>
              </div>
              
              <div>
                <p className="text-base font-medium text-black mb-1">ƒê·ªãa ch·ªâ nh√†:</p>
                <p className="text-lg text-black">123 ƒë∆∞·ªùng, qu·∫≠n, TP HCM</p>
              </div>
              
              <div>
                <p className="text-base font-medium text-black mb-1">L∆∞u √Ω cho shop:</p>
                <p className="text-lg text-black">ƒê√≥ng g√≥i c·∫©n th·∫≠n!</p>
              </div>
            </div>
          </div>

          {/* Payment Info */}
          <div className="border-2 border-[#604B3B] rounded-lg p-8">
            <h2 className="text-2xl font-bold text-black mb-8">Th√¥ng tin thanh to√°n</h2>
            
            <div className="space-y-6">
              <div>
                <p className="text-base font-medium text-black mb-1">Ph∆∞∆°ng th·ª©c thanh to√°n:</p>
                <p className="text-lg text-black">Thanh to√°n khi nh·∫≠n h√†ng</p>
              </div>
              
              <div>
                <p className="text-base font-medium text-black mb-1">Tr·∫°ng th√°i thanh to√°n:</p>
                <p className="text-lg text-[#FF9800]">Ch∆∞a thanh to√°n</p>
              </div>
              
              <div>
                <p className="text-base font-medium text-black mb-1">Ph∆∞∆°ng th·ª©c giao h√†ng:</p>
                <p className="text-lg text-black">Giao h√†ng t·∫≠n n∆°i</p>
              </div>
              
              <div>
                <p className="text-base font-medium text-black mb-1">Ph√≠ giao h√†ng:</p>
                <p className="text-lg text-black">0 VNƒê</p>
              </div>
              
              <div>
                <p className="text-base font-medium text-black mb-1">Ng√†y giao d·ª± ki·∫øn:</p>
                <p className="text-lg text-black">18/12/2025</p>
              </div>
            </div>
          </div>
        </div>

        {/* Order Items */}
        <div className="border-2 border-[#604B3B] rounded-lg p-8 mb-8">
          <h2 className="text-2xl font-bold text-black mb-8">S·∫£n ph·∫©m ƒë·∫∑t h√†ng</h2>
          
          <div className="space-y-4 mb-8">
            {orderItems.map((item) => (
              <div key={item.id} className="border border-[#E0E0E0] rounded-lg p-6 flex items-center gap-6">
                <div className="w-20 h-20 bg-[#D0BF98] rounded-lg overflow-hidden flex-shrink-0">
                  <Image
                    src={item.image}
                    alt={item.name}
                    width={80}
                    height={80}
                    className="w-full h-full object-cover"
                  />
                </div>
                
                <div className="flex-1">
                  <h3 className="text-lg font-bold text-black mb-2">{item.name}</h3>
                  <p className="text-base text-[#666666]">
                    ƒê∆°n gi√°: {item.price.toLocaleString("vi-VN")} VNƒê
                  </p>
                  <p className="text-base text-[#666666]">S·ªë l∆∞·ª£ng: {item.quantity}</p>
                </div>
                
                <div className="text-xl font-bold text-black text-right">
                  {(item.price * item.quantity).toLocaleString("vi-VN")} VNƒê
                </div>
              </div>
            ))}
          </div>

          {/* Order Summary */}
          <div className="border-t border-[#E0E0E0] pt-6 space-y-4">
            <div className="flex justify-end items-center gap-20">
              <span className="text-lg text-black">T·∫°m t√≠nh:</span>
              <span className="text-lg text-black">{subtotal.toLocaleString("vi-VN")} VNƒê</span>
            </div>
            
            <div className="flex justify-end items-center gap-20">
              <span className="text-lg text-black">Ph√≠ giao h√†ng:</span>
              <span className="text-lg text-black">{shippingFee.toLocaleString("vi-VN")} VNƒê</span>
            </div>
            
            <div className="flex justify-end items-center gap-20 pt-4 border-t border-[#E0E0E0]">
              <span className="text-xl font-bold text-black">T·ªïng ti·ªÅn thanh to√°n:</span>
              <span className="text-xl font-bold text-black">{total.toLocaleString("vi-VN")} VNƒê</span>
            </div>
          </div>
        </div>

        {/* Action Buttons */}
        <div className="flex justify-center gap-6 mb-6">
          <button
            onClick={() => router.push("/orders")}
            className="px-12 py-4 border-2 border-[#604B3B] text-[#604B3B] font-medium text-lg rounded-lg hover:bg-gray-50 transition-colors"
          >
            Quay l·∫°i danh s√°ch
          </button>
          <button className="px-12 py-4 bg-[#604B3B] text-white font-medium text-lg rounded-lg hover:bg-[#4a3b2d] transition-colors">
            Mua l·∫°i
          </button>
        </div>

        {/* Privacy Notice */}
        <p className="text-center text-sm text-black leading-relaxed max-w-[470px] mx-auto">
          Ch√∫ng t√¥i cam k·∫øt gi·ªØ k√≠n th√¥ng tin kh√°ch h√†ng, ch·ªâ d√πng ƒë·ªÉ x·ª≠ l√Ω ƒë∆°n h√†ng, kh√¥ng chia s·∫ª cho b√™n th·ª© ba.
        </p>
      </div>
    </div>
  );
}
